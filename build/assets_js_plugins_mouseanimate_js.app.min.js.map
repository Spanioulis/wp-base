{"version":3,"file":"./build/assets_js_plugins_mouseanimate_js.app.min.js","mappings":";;;;;;;;AAAA;;AAEA,CAAC,SAASA,YAAYA,CAAA,EAAG;EACrB,IAAIC,QAAQ,GAAGC,CAAC,CAAC,0BAA0B,CAAC;EAE5CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;;EAE5C;EACA,IAAII,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC3CF,KAAK,CAACG,WAAW,kMAOX;EACNF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACL,KAAK,CAAC;;EAE3B;EACA,IAAIJ,QAAQ,CAACU,MAAM,EAAE;IACjBV,QAAQ,CAACW,IAAI,CAAC,UAAUC,CAAC,EAAE;MACvB,IAAIC,OAAO,GAAGZ,CAAC,CAAC,IAAI,CAAC;;MAErB;MACA,IAAIa,WAAW,GAAGD,OAAO,CAACE,IAAI,CAAC,kBAAkB,CAAC;;MAElD;MACA,IAAI,CAACD,WAAW,CAAC,CAAC,CAAC,EAAE;QACjB,IAAIE,OAAO,GAAGH,OAAO,CAACI,IAAI,CAAC,mBAAmB,CAAC;QAC/CH,WAAW,GAAGb,CAAC,CAAC,OAAO,EAAE;UACrBiB,EAAE,EAAE,cAAc,GAAGN,CAAC;UACtB,SAAO;QACX,CAAC,CAAC;QACFX,CAAC,CAAC,QAAQ,CAAC,CAACQ,MAAM,CAACK,WAAW,CAAC;QAC/BK,UAAU,CAACH,OAAO,EAAEF,WAAW,CAAC;MACpC;;MAEA;MACAD,OAAO,CAACO,EAAE,CAAC,YAAY,EAAE,YAAM;QAC3BC,OAAO,CAACP,WAAW,CAAC;QACpBb,CAAC,CAACqB,MAAM,CAAC,CAACF,EAAE,CAAC,WAAW,EAAE,UAACG,CAAC,EAAK;UAC7BC,aAAa,CAACD,CAAC,EAAET,WAAW,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CAAC;MACFD,OAAO,CAACO,EAAE,CAAC,YAAY,EAAE,YAAM;QAC3BK,OAAO,CAACX,WAAW,CAAC;QACpBb,CAAC,CAACqB,MAAM,CAAC,CAACI,GAAG,CAAC,WAAW,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEA,SAASC,aAAaA,CAAA,EAAG;IACrB,OAAS,cAAc,IAAIL,MAAM,IAC7BM,SAAS,CAACC,cAAc,GAAG,CAAE,IAC7BD,SAAS,CAACE,gBAAgB,GAAG,CAAE;EACrC;EAEF,SAASX,UAAUA,CAACY,GAAG,EAAEC,GAAG,EAAE;IAC1BA,GAAG,CAACC,IAAI,CAACF,GAAG,CAAC;EACjB;EAEA,SAASP,aAAaA,CAACD,CAAC,EAAES,GAAG,EAAE;IAC3BA,GAAG,CAACE,GAAG,CAAC,MAAM,EAAEX,CAAC,CAACY,KAAK,GAAG,IAAI,CAAC;IAC/BH,GAAG,CAACE,GAAG,CAAC,KAAK,EAAEX,CAAC,CAACa,KAAK,GAAG,IAAI,CAAC;EAClC;EAEA,SAASf,OAAOA,CAACW,GAAG,EAAE;IAClB,IAAI,CAACL,aAAa,CAAC,CAAC,EAAE;MAClBK,GAAG,CAACE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;IAC3B;EACJ;EAEA,SAAST,OAAOA,CAACO,GAAG,EAAE;IAClBA,GAAG,CAACE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;EAC3B;AACJ,CAAC,EAAE,CAAC","sources":["webpack://maneko/./assets/js/plugins/mouseanimate.js"],"sourcesContent":["// ANIMATED DIV FOLLOWING CURSOR\r\n\r\n(function mouseAnimate() {\r\n    var triggers = $('.js-mouseanimate-trigger');\r\n\r\n    console.log('mouseAnimate loaded', triggers);\r\n\r\n    // create styles\r\n    let style = document.createElement('style');\r\n    style.textContent =\r\n        `.js-mouseanimate {\r\n            position: absolute;\r\n            pointer-events: none;\r\n            opacity: 0;\r\n            z-index: 1;\r\n            transform: translateY(-50%);\r\n        }`;\r\n    document.head.append(style);\r\n\r\n    // prepare each trigger\r\n    if (triggers.length) {\r\n        triggers.each(function (i) {\r\n            let trigger = $(this);\r\n\r\n            // we look for the animated element\r\n            let animatedDiv = trigger.find('.js-mouseanimate');\r\n\r\n            // if we don't find it, we look for a message in data-mouseanimate\r\n            if (!animatedDiv[0]) {\r\n                let message = trigger.attr('data-mouseanimate');\r\n                animatedDiv = $('<div>', {\r\n                    id: 'animatedDiv-' + i,\r\n                    class: 'js-mouseanimate-msg',\r\n                });\r\n                $(' body ').append(animatedDiv);\r\n                setMessage(message, animatedDiv);\r\n            }\r\n\r\n            // we create all event listeners\r\n            trigger.on('mouseenter', () => {\r\n                showBox(animatedDiv);\r\n                $(window).on('mousemove', (e) => {\r\n                    updateDisplay(e, animatedDiv);\r\n                });\r\n            });\r\n            trigger.on('mouseleave', () => {\r\n                hideBox(animatedDiv);\r\n                $(window).off('mousemove');\r\n            });\r\n        });\r\n    }\r\n\r\n    function isTouchDevice() {\r\n        return (('ontouchstart' in window) ||\r\n           (navigator.maxTouchPoints > 0) ||\r\n           (navigator.msMaxTouchPoints > 0));\r\n      }\r\n\r\n    function setMessage(msg, div) {\r\n        div.html(msg);\r\n    }\r\n    \r\n    function updateDisplay(e, div) {\r\n        div.css('left', e.pageX + 'px');\r\n        div.css('top', e.pageY + 'px');\r\n    }\r\n    \r\n    function showBox(div) {\r\n        if (!isTouchDevice()) {\r\n            div.css('opacity', '1');\r\n        }\r\n    }\r\n    \r\n    function hideBox(div) {\r\n        div.css('opacity', '0');\r\n    }\r\n})();\r\n"],"names":["mouseAnimate","triggers","$","console","log","style","document","createElement","textContent","head","append","length","each","i","trigger","animatedDiv","find","message","attr","id","setMessage","on","showBox","window","e","updateDisplay","hideBox","off","isTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","msg","div","html","css","pageX","pageY"],"sourceRoot":""}